/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ads.resources.communication;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author mgamell
 */
public class RobotStub extends javax.swing.JFrame {

    /**
     * Creates new form ServerStub
     */
    public RobotStub() {
        initComponents();
    }

    public void moveRobotToNextPoint() {
        this.outputLog.append("request: move robot to next point\n");
        this.outputLog.append("action: sleep 1;\n");
        try {
            Thread.sleep(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(RobotStub.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.outputLog.append("answer: Done\n\n");
    }

    public String waitForPassword(int timeout) {
        this.outputLog.append("request: wait for password\n");
        String password = JOptionPane.showInputDialog(this,
            "Insert password",
            "Password",
            JOptionPane.INFORMATION_MESSAGE);
        this.outputLog.append("action: ask for password\n");
        this.outputLog.append("answer: "+password+"\n\n");
        return password;
    }

    public void ringBuzzer() {
        this.outputLog.append("request: ring buzzer\n");
        this.outputLog.append("answer\n\n");
    }

    public void showPasswordIncorrectError() {
        this.outputLog.append("request: show password incorrect error\n");
        this.outputLog.append("answer\n\n");
    }

    public void showPasswordIncorrectWarning() {
        this.outputLog.append("request: show password incorrect warning\n");
        this.outputLog.append("answer\n\n");
    }

    public void showPasswordCorrectMessage() {
        this.outputLog.append("request: show password correct\n");
        this.outputLog.append("answer\n\n");
    }

    public void openTray(int trayNum) {
        this.outputLog.append("request: open tray "+trayNum+"\n");
        this.outputLog.append("answer\n\n");
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        outputLog = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        outputLog.setColumns(20);
        outputLog.setRows(5);
        jScrollPane1.setViewportView(outputLog);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea outputLog;
    // End of variables declaration//GEN-END:variables

}
